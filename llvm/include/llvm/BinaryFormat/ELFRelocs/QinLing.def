#ifndef ELF_RELOC
#error "ELF_RELOC must be defined"
#endif

// 32-bit relocation types
ELF_RELOC(R_QINLING_NONE,       0)  // No relocation
ELF_RELOC(R_QINLING_32,         1)  // 32-bit absolute address
ELF_RELOC(R_QINLING_PC32,       2)  // 32-bit relative address
ELF_RELOC(R_QINLING_GOT32,      3)  // 32-bit GOT entry
ELF_RELOC(R_QINLING_PLT32,      4)  // 32-bit PLT entry
ELF_RELOC(R_QINLING_COPY,       5)  // Copy symbol at runtime
ELF_RELOC(R_QINLING_GLOB_DAT,   6)  // Create a global data entry
ELF_RELOC(R_QINLING_JUMP_SLOT,  7)  // Create a jump slot
ELF_RELOC(R_QINLING_RELATIVE,   8)  // Adjust by program base

// 64-bit relocation types
ELF_RELOC(R_QINLING_64,         9)  // 64-bit absolute address
ELF_RELOC(R_QINLING_PC64,       10) // 64-bit relative address
ELF_RELOC(R_QINLING_GOT64,      11) // 64-bit GOT entry
ELF_RELOC(R_QINLING_PLT64,      12) // 64-bit PLT entry
ELF_RELOC(R_QINLING_GOTPCREL,   13) // 64-bit GOT relative address
ELF_RELOC(R_QINLING_32S,        14) // 32-bit signed absolute address
ELF_RELOC(R_QINLING_16,         15) // 16-bit absolute address
ELF_RELOC(R_QINLING_PC16,       16) // 16-bit relative address
ELF_RELOC(R_QINLING_8,          17) // 8-bit absolute address
ELF_RELOC(R_QINLING_PC8,        18) // 8-bit relative address

// Additional relocation types for specific use cases
ELF_RELOC(R_QINLING_TLS_TPOFF32, 19) // 32-bit offset in TLS block
ELF_RELOC(R_QINLING_TLS_TPOFF64, 20) // 64-bit offset in TLS block
ELF_RELOC(R_QINLING_TLS_DTPMOD32, 21) // ID of module containing symbol
ELF_RELOC(R_QINLING_TLS_DTPMOD64, 22) // ID of module containing symbol
ELF_RELOC(R_QINLING_TLS_DTPOFF32, 23) // Offset in TLS block
ELF_RELOC(R_QINLING_TLS_DTPOFF64, 24) // Offset in TLS block